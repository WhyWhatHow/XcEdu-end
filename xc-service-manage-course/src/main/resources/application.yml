server:
  port: ${PORT:31200}
spring:
  application:
    name: xc-service-manage-course
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/xc_course?characterEncoding=utf-8
      username: root
      password: aa12321.
      driverClassName: com.mysql.cj.jdbc.Driver
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
pagehelper:
  helper-dialect: mysql

#mybatis:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 打印sql语句，测试用

# eureka的配置信息
eureka:
  client:
    register-with-eureka: true # 注册服务开关
    fetch-registry: true # 获取服务信息
    # eureka client  与 eureka server 交互的地址,多个中间用逗号隔开
    serviceUrl: #Eureka客户端与Eureka服务端的交互地址，高可用状态配置对方的地址，单机状态配置自己（如果不配置则默认本机8761端口）
      defaultZone: ${EUREKA_SERVER:http://localhost:50101/eureka/,http://localhost:50102/eureka/}
instance:
  prefer-ip-address: true  #将自己的ip注入到eureka服务中
  ip-address: ${IP_ADDRESS:127.0.0.1}
  instance-id: ${spring.application.name}:${server.port} # 指定实例id

    #指定实例id
#指定实例id
ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间

# 用户注入属性
course-publish:
  siteId: 5e800c8b83e280056463e674 # 站点id
  templateId: 5e7c64c99484362aa8210030 # 课程详情页面模板id
  previewUrl: http://www.xuecheng.com/cms/preview/
  pageWebPath: /course/detail/
  pagePhysicalPath: /course/detail/
  dataUrlPre: http://localhost:31200/course/courseview/